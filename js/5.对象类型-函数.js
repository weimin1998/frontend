// 1.Function，函数类型。
// js中，函数是对象，既然是对象，就有属性和方法，可以作为方法参数，返回值
// 如果一个函数，它的参数列表包含函数，或者返回值是函数类型，那么这个函数称为高阶函数；

function add(a = 0, b = 0) {
    return a + b;
}

add(1, 2); // 3
add(4, 5, 6); // 9
add(1); // NaN

// 2.Array

// 3.




// js的函数调用和java中的方法调用有很大的不同；
/* 
1.js中，函数的形参不用指定类型；
2.当传递的实参数多于形参，则形参有几个，就只取前几个实参；
3.当传递的实参数少于形参，则不够的参数，默认是undefined；
4.参数的默认值，直接在声明的时候，用等号指定；
5.函数调用的时候，如果只想给第二个参数赋值，第一个参数使用默认值，可以给第一个参数传递一个undefined;


5.函数可以参与赋值，比如 给某个按钮绑定点击事件 
document.getElementById("").onclick = 函数;
*/

/* 
匿名函数
1.可以定义完后，立即调用
2.作为其他对象的方法

箭头函数
是比匿名函数还要简洁的函数，类似lambda表达式
*/

(function (a, b) {
    return a + b;
})(2, 3);



(a, b) => {
    return a + b;
}

document.getElementById("").onclick = add;


// 闭包，
// 函数在定义的时候，它的作用域就已经确定了，因此不论函数去了哪里，都能从它的作用域中找到当时的那些变量；
// 所谓的闭包，就是指 函数能够访问自己的作用域中的变量；


var x = 10;
function a() {
    var y = 20
    function b() {
        console.log(x, y)
    }

    return b;
}

a()()


// let var